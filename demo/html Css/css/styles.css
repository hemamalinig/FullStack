.demo{
    background-color: lightgreen;
}

/* Element selector to change the color of all paragraphs to green
p {
    color: green;
}

/* Class selector to set the background color of elements with the class highlight to yellow 
.highlight {
    background-color: yellow;
}

/* ID selector to set the color of a specific heading with the ID main-heading to blue 
#main-heading {
    color: blue;
}

/* Class selector to set the text size to large 
.text-large {
    font-size: 1.5em;
} */

/* Descendant selector to change the color of all paragraphs inside a div to red */
div  p {
    color: red;
}

/* Child selector to set the background color of paragraphs that are direct children of a section to light blue */
section > p {
    background-color: lightblue;
}

/* Adjacent sibling selector to change the background color of a paragraph that directly follows an h2 to light gray */
h2 + p {
    background-color: lightgray;
}

/* General sibling selector to set the background color of all paragraphs that are siblings of an h2 to light pink */
/* h2 ~ p {
    background-color: lightpink;
} */

/* Change the font of a heading */
.main-heading {
    font-family: Arial, sans-serif;
    font-weight: bold;
    text-align: center;
}

/* Set the font-size of paragraphs to 20px */
p {
    font-size: 20px;
    line-height: 1.5;
}

.uppercase {
    text-transform: uppercase;
}
/* Apply background image to the entire page */
/* body {
    background-image: url('../images/pic2.jpg');
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
} */
 .box{
    margin: 20px;
    padding: 15px;
    border: 2px solid black;
    width: 300px;
    height: 300px;
    /* overflow: hidden; */  /* Disable scrolling */
    /* overflow: auto; /* Enable scrolling */
     /* overflow-y: scroll;  /* Enable horizontal scrolling 
     overflow-x: scroll; */
     overflow: auto;
     white-space: nowrap; /*  Prevent text from wrapping to the next line */
} 
/* .box {
    width: 300px; /* Set a fixed width for the box 
    height: 150px; /* Set a fixed height for the box 
    padding: 10px; /* Add some padding inside the box 
    border: 2px solid black; /* Add a border around the box 
    overflow-x: scroll; /* Enable horizontal scrolling 
    overflow-y: hidden; /* Disable vertical scrolling 
    white-space: nowrap; /* Prevent text from wrapping to the next line 
} */
/* .container{
    position: relative;
}
.child{
    position: absolute;
    top: 50px;
    left: 30px;
}
.overlap{
   z-index: 1;
   position: absolute;
   top: 50px;
 
} */
.container {
    position: relative; /* Parent div with relative positioning */
    width: 200px;
    height: 200px;
    background-color: lightblue;
    border: 2px solid black;
    margin: 20px;
}

.child {
    position: absolute; /* Child div with absolute positioning */
    top: 50px; /* Move 50px from the top of the parent */
    left: 30px; /* Move 30px from the left of the parent */
    width: 100px;
    height: 100px;
    background-color: lightgreen;
    border: 2px solid darkgreen;
}

.overlap {
    position: absolute; /* Overlapping div */
    top: 70px; /* Adjust position to overlap */
    left: 70px;
    width: 120px;
    height: 120px;
    background-color: rgba(255, 0, 0, 0.7); /* Semi-transparent red */
    border: 2px solid darkred;
    z-index: 10; /* Higher z-index to ensure it overlaps */
}
/* Explanation:
Parent Div (.container):

position: relative; ensures that the child div's position: absolute; is calculated relative to this parent.
A fixed width, height, and background color are applied for visibility.
Child Div (.child):

position: absolute; positions the child div relative to the parent.
top: 50px; and left: 30px; move the child div 50px from the top and 30px from the left of the parent.
Overlapping Div (.overlap):

position: absolute; allows it to overlap other elements.
z-index: 10; ensures it appears on top of the other divs.
A semi-transparent background color (rgba(255, 0, 0, 0.7)) is used to make the overlap visually distinct.*/

/* Inline elements */
.inline {
    display: inline; /* Inline display */
    background-color: lightblue;
    padding: 10px;
    margin: 5px;
    border: 1px solid blue;
}

/* Inline-block elements */
.inline-block {
    display: inline-block; /* Inline-block display */
    background-color: lightgreen;
    padding: 10px;
    margin: 5px;
    border: 1px solid green;
    width: 150px; /* Set a fixed width */
}

/* Block elements */
.block {
    display: block; /* Block display */
    background-color: lightcoral;
    padding: 10px;
    margin: 5px;
    border: 1px solid red;
    width: 150px; /* Set a fixed width */
}/* Inline elements */
.inline {
    display: inline; /* Inline display */
    background-color: lightblue;
    padding: 10px;
    margin: 5px;
    border: 1px solid blue;
}

/* Inline-block elements */
.inline-block {
    display: inline-block; /* Inline-block display */
    background-color: lightgreen;
    padding: 10px;
    margin: 5px;
    border: 1px solid green;
    width: 150px; /* Set a fixed width */
}

/* Block elements */
.block {
    display: block; /* Block display */
    background-color: lightcoral;
    padding: 10px;
    margin: 5px;
    border: 1px solid red;
    width: 150px; /* Set a fixed width */
}
/*Explanation:
Inline Elements (.inline):

display: inline; makes the elements flow inline with other content.
They do not respect width or height properties and only take up as much space as their content requires.
Inline-block Elements (.inline-block):

display: inline-block; allows the elements to flow inline but also respect width and height properties.
They behave like block elements in terms of sizing but remain inline with other elements.
Block Elements (.block):

display: block; makes the elements take up the full width of their container by default.
They start on a new line and respect width and height properties.
Expected Output:
Inline Elements: Appear side by side, wrapping to the next line if there isn't enough space.
Inline-block Elements: Appear side by side but retain their specified width and height.
Block Elements: Stack vertically, each taking up the full width of the container.*/